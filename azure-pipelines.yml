resources:
 repositories:
   - repository: NOP_4_70
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.70
   - repository: NOP_4_60
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.60
   - repository: NOP_4_40
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.40
   - repository: NOP_4_50
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.50
   - repository: NOP_4_30
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.30
   - repository: Plugin
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-Plugin-ScheduleTaskLog

trigger:
- main

variables:
  buildConfiguration: 'Release'
  pluginFolder: 'Nop.Plugin.Admin.ScheduleTaskLog'
  pluginSystemName: 'Admin.ScheduleTaskLog'
  githubProjectName: 'NOP-Plugin-ScheduleTaskLog'
  build_4_30: true
  build_4_40: true
  build_4_50: true
  build_4_60: true
  build_4_70: true

pool:
 vmImage: 'ubuntu-latest'

steps:
- checkout: Plugin
  clean: true
  fetchDepth: 1
- checkout: NOP_4_30
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_40
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_50
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_60
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_70
  clean: true
  fetchDepth: 1
  submodules: true
  
- task: UseDotNet@2
  displayName: 'Use .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

- task: UseDotNet@2
  displayName: 'Use .NET 7 SDK'
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

- task: UseDotNet@2
  displayName: 'Use .NET 3.1 Core SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: UseDotNet@2
  displayName: 'Use .NET 5 SDK'
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- task: UseDotNet@2
  displayName: 'Use .NET 6 SDK'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'
    
- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\$(githubProjectName)\package\uploadedItems.json' -Destination '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy manifest file'
 
- ${{ and(succeeded(), eq(variables['build_4_30'], true)) }}:
    - template: steps-template.yml
      parameters:
        version: '4.30'
        pluginFolder: $(Build.pluginFolder)
        pluginSystemName: $(Build.pluginSystemName)
        
- ${{ and(succeeded(), eq(variables['build_4_40'], true)) }}:
    - template: steps-template.yml
      parameters:
        version: '4.40'
        pluginFolder: $(Build.pluginFolder)
        pluginSystemName: $(Build.pluginSystemName)
        
- ${{ and(succeeded(), eq(variables['build_4_50'], true)) }}:
    - template: steps-template.yml
      parameters:
        version: '4.50'
        pluginFolder: $(Build.pluginFolder)
        pluginSystemName: $(Build.pluginSystemName)
        
- ${{ and(succeeded(), eq(variables['build_4_60'], true)) }}:
    - template: steps-template.yml
      parameters:
        version: '4.60'
        pluginFolder: $(Build.pluginFolder)
        pluginSystemName: $(Build.pluginSystemName)
        
- ${{ and(succeeded(), eq(variables['build_4_70'], true)) }}:
    - template: steps-template.yml
      parameters:
        version: '4.70'
        pluginFolder: $(Build.pluginFolder)
        pluginSystemName: $(Build.pluginSystemName)

- powershell: Get-ChildItem -Path '$(Build.ArtifactStagingDirectory)' -recurse
  displayName: 'List contents of $(Build.ArtifactStagingDirectory)'

- task: ArchiveFiles@2
  displayName: 'Generate zip file'
  inputs:
    rootFolderOrFile: $(Build.ArtifactStagingDirectory)
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)\$(Build.pluginSystemName)_$(Build.BuildId).zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish zip file'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)\$(Build.pluginSystemName)(Build.BuildId).zip'
    ArtifactName: GeneratedPackage