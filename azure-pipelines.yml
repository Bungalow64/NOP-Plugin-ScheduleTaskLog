resources:
 repositories:
   - repository: NOP_4_70
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.70
   - repository: NOP_4_60
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.60
   - repository: NOP_4_40
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.40
   - repository: NOP_4_50
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.50
   - repository: NOP_4_30
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-4.30
   - repository: Plugin
     type: github
     endpoint: Bungalow64
     name: Bungalow64/NOP-Plugin-ScheduleTaskLog

trigger:
- main

variables:
  buildConfiguration: 'Release'
  build_4_30: true
  build_4_40: true
  build_4_50: true
  build_4_60: true

pool:
 vmImage: 'ubuntu-latest'

steps:
- checkout: Plugin
  clean: true
  fetchDepth: 1
- checkout: NOP_4_30
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_40
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_50
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_60
  clean: true
  fetchDepth: 1
  submodules: true
- checkout: NOP_4_70
  clean: true
  fetchDepth: 1
  submodules: true
  
- task: UseDotNet@2
  displayName: 'Use .NET 8 SDK'
  inputs:
    packageType: 'sdk'
    version: '8.0.x'

- task: UseDotNet@2
  displayName: 'Use .NET 7 SDK'
  inputs:
    packageType: 'sdk'
    version: '7.0.x'

- task: UseDotNet@2
  displayName: 'Use .NET 3.1 Core SDK'
  inputs:
    packageType: 'sdk'
    version: '3.1.x'

- task: UseDotNet@2
  displayName: 'Use .NET 5 SDK'
  inputs:
    packageType: 'sdk'
    version: '5.0.x'

- task: UseDotNet@2
  displayName: 'Use .NET 6 SDK'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-Plugin-ScheduleTaskLog\package\uploadedItems.json' -Destination '$(Build.ArtifactStagingDirectory)'
  displayName: 'Copy manifest file'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.30/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.30/**/CustomPlugins/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.30
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.30/Admin.ScheduleTaskLog')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.30/Admin.ScheduleTaskLog' -ItemType Directory }
  displayName: 'Check and create directory - 4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.30\Presentation\Nop.Web\Plugins\Admin.ScheduleTaskLog\*' -Destination '$(Build.ArtifactStagingDirectory)\4.30\Admin.ScheduleTaskLog' -Recurse
  displayName: 'Copy plugin - 4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- powershell: Remove-Item -Recurse -Force $(Build.SourcesDirectory)\NOP-4.30
  displayName: 'Clean up NOP-4.30'
  condition: and(succeeded(), eq('${{ variables.build_4_30 }}', true))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.40/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.40/**/CustomPlugins/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.40
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.40/Admin.ScheduleTaskLog')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.40/Admin.ScheduleTaskLog' -ItemType Directory }
  displayName: 'Check and create directory - 4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.40\src\Presentation\Nop.Web\Plugins\Admin.ScheduleTaskLog\*' -Destination '$(Build.ArtifactStagingDirectory)\4.40\Admin.ScheduleTaskLog' -Recurse
  displayName: 'Copy plugin - 4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- powershell: Remove-Item -Recurse -Force $(Build.SourcesDirectory)\NOP-4.40
  displayName: 'Clean up NOP-4.40'
  condition: and(succeeded(), eq('${{ variables.build_4_40 }}', true))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.50/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.50'
  condition: and(succeeded(), eq('${{ variables.build_4_50 }}', true))

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.50/**/CustomPlugins/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.50
  condition: and(succeeded(), eq('${{ variables.build_4_50 }}', true))

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.50/Admin.ScheduleTaskLog')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.50/Admin.ScheduleTaskLog' -ItemType Directory }
  displayName: 'Check and create directory - 4.50'
  condition: and(succeeded(), eq('${{ variables.build_4_50 }}', true))

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.50\Presentation\Nop.Web\Plugins\Admin.ScheduleTaskLog\*' -Destination '$(Build.ArtifactStagingDirectory)\4.50\Admin.ScheduleTaskLog' -Recurse
  displayName: 'Copy plugin - 4.50'
  condition: and(succeeded(), eq('${{ variables.build_4_50 }}', true))

- powershell: Remove-Item -Recurse -Force $(Build.SourcesDirectory)\NOP-4.50
  displayName: 'Clean up NOP-4.50'
  condition: and(succeeded(), eq('${{ variables.build_4_50 }}', true))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.60/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.60'
  condition: and(succeeded(), eq('${{ variables.build_4_60 }}', true))

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.60/**/CustomPlugins/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.60
  condition: and(succeeded(), eq('${{ variables.build_4_60 }}', true))

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.60/Admin.ScheduleTaskLog')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.60/Admin.ScheduleTaskLog' -ItemType Directory }
  displayName: 'Check and create directory - 4.60'
  condition: and(succeeded(), eq('${{ variables.build_4_60 }}', true))

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.60\Presentation\Nop.Web\Plugins\Admin.ScheduleTaskLog\*' -Destination '$(Build.ArtifactStagingDirectory)\4.60\Admin.ScheduleTaskLog' -Recurse
  displayName: 'Copy plugin - 4.60'
  condition: and(succeeded(), eq('${{ variables.build_4_60 }}', true))

- powershell: Remove-Item -Recurse -Force $(Build.SourcesDirectory)\NOP-4.60
  displayName: 'Clean up NOP-4.60'
  condition: and(succeeded(), eq('${{ variables.build_4_60 }}', true))

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(Build.SourcesDirectory)/NOP-4.70/**/*.sln'
    arguments: '--configuration $(buildConfiguration)'
  displayName: 'dotnet build $(buildConfiguration) - NOP 4.70'

- task: DotNetCoreCLI@2
  inputs:
   command: test
   projects: '$(Build.SourcesDirectory)/NOP-4.70/**/CustomPlugins/**/*.Tests.csproj'
  displayName: dotnet test - NOP 4.70

- powershell: If (!(Test-Path '$(Build.ArtifactStagingDirectory)/4.70/Admin.ScheduleTaskLog')) { New-Item -Path '$(Build.ArtifactStagingDirectory)/4.70/Admin.ScheduleTaskLog' -ItemType Directory }
  displayName: 'Check and create directory - 4.70'

- powershell: Copy-Item -Path '$(Build.SourcesDirectory)\NOP-4.70\Presentation\Nop.Web\Plugins\Admin.ScheduleTaskLog\*' -Destination '$(Build.ArtifactStagingDirectory)\4.70\Admin.ScheduleTaskLog' -Recurse
  displayName: 'Copy plugin - 4.70'

- powershell: Get-ChildItem -Path '$(Build.ArtifactStagingDirectory)' -recurse
  displayName: 'List contents of $(Build.ArtifactStagingDirectory)'

- task: ArchiveFiles@2
  displayName: 'Generate zip file'
  inputs:
    rootFolderOrFile: $(Build.ArtifactStagingDirectory)
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)\Admin.ScheduleTaskLog_$(Build.BuildId).zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish zip file'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)\Admin.ScheduleTaskLog_$(Build.BuildId).zip'
    ArtifactName: GeneratedPackage